// <auto-generated />
using System;
using Entities.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Matriculas_API.Migrations
{
    [DbContext(typeof(ExamenContext))]
    [Migration("20211128042221_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Matriculas_API.Models.Alumno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("alumno_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("alumno_apellidos");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2")
                        .HasColumnName("alumno_fechaNacimiento");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("alumno_nombres");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("alumno_sexo");

                    b.HasKey("Id");

                    b.ToTable("AP_Vargas_Rogery_Alumnos", "dbo");
                });

            modelBuilder.Entity("Matriculas_API.Models.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("curso_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("curso_descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("curso_nombre");

                    b.Property<bool>("Obligatoriedad")
                        .HasColumnType("bit")
                        .HasColumnName("curso_obligatoriedad");

                    b.HasKey("Id");

                    b.ToTable("AP_Vargas_Rogery_Cursos", "dbo");
                });

            modelBuilder.Entity("Matriculas_API.Models.InscripcionCurso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("inscripcion_curso_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AlumnoId")
                        .HasColumnType("int")
                        .HasColumnName("alumno_id");

                    b.Property<int>("CursoId")
                        .HasColumnType("int")
                        .HasColumnName("curso_id");

                    b.HasKey("Id");

                    b.HasIndex("AlumnoId");

                    b.HasIndex("CursoId");

                    b.ToTable("AP_Vargas_Rogery_Inscripciones_curso", "dbo");
                });

            modelBuilder.Entity("Matriculas_API.Models.Notas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("nota_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<float?>("Final")
                        .HasColumnType("real")
                        .HasColumnName("nota_final");

                    b.Property<int>("InscripcionCursoId")
                        .HasColumnType("int")
                        .HasColumnName("inscripcion_curso_id");

                    b.Property<float?>("Parcial")
                        .HasColumnType("real")
                        .HasColumnName("nota_parcial");

                    b.Property<float?>("Pracitca_3")
                        .HasColumnType("real")
                        .HasColumnName("nota_practica_3");

                    b.Property<float?>("Practica_1")
                        .HasColumnType("real")
                        .HasColumnName("nota_practica_1");

                    b.Property<float?>("Practica_2")
                        .HasColumnType("real")
                        .HasColumnName("nota_practica_2");

                    b.HasKey("Id");

                    b.HasIndex("InscripcionCursoId")
                        .IsUnique();

                    b.ToTable("AP_Vargas_Rogery_Notas", "dbo");
                });

            modelBuilder.Entity("Matriculas_API.Models.InscripcionCurso", b =>
                {
                    b.HasOne("Matriculas_API.Models.Alumno", "Alumno")
                        .WithMany("InscripcionesCursos")
                        .HasForeignKey("AlumnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Matriculas_API.Models.Curso", "Curso")
                        .WithMany("InscripcionesCursos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("Matriculas_API.Models.Notas", b =>
                {
                    b.HasOne("Matriculas_API.Models.InscripcionCurso", "InscripcionCurso")
                        .WithOne("Notas")
                        .HasForeignKey("Matriculas_API.Models.Notas", "InscripcionCursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InscripcionCurso");
                });

            modelBuilder.Entity("Matriculas_API.Models.Alumno", b =>
                {
                    b.Navigation("InscripcionesCursos");
                });

            modelBuilder.Entity("Matriculas_API.Models.Curso", b =>
                {
                    b.Navigation("InscripcionesCursos");
                });

            modelBuilder.Entity("Matriculas_API.Models.InscripcionCurso", b =>
                {
                    b.Navigation("Notas");
                });
#pragma warning restore 612, 618
        }
    }
}
